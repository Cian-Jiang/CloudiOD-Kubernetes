import matplotlib.pyplot as plt

local_client_data = {
    (1, 1): (0.377710471, 0.382228447),
    (2, 1): (0.329985272, 0.31902968),
    (4, 1): (0.318033602, 0.320304776),
    (8, 1): (0.340205003, 0.334454643),
    (16, 1): (0.283207444, 0.294084892),
    (1, 2): (0.32705152, 0.319245553),
    (2, 2): (0.237144748, 0.238841025),
    (4, 2): (0.196161628, 0.198909318),
    (8, 2): (0.152554305, 0.169834511),
    (16, 2): (0.145233709, 0.160534052),
    (1, 4): (0.360520095, 0.348712526),
    (2, 4): (0.22281529, 0.219614128),
    (4, 4): (0.149960775, 0.152882323),
    (8, 4): (0.105043514, 0.103816915),
    (16, 4): (0.088200336, 0.094482392),
    (2, 8): (0.223651996, 0.238997325),
    (4, 8): (0.125056336, 0.131181176),
    (8, 8): (0.084813433, 0.08412282),
    (16, 8): (0.05688156, 0.055455908),
    (4, 16): (0.10230259, 0.111516659),
    (8, 16): (0.078118253, 0.068739651),
    (16, 16): (0.047038397, 0.047351241),
}

nectar_client_data = {
    (1, 1): (0.531307956, 0.458506782),
    (2, 1): (0.471479269, 0.457428867),
    (4, 1): (0.481721081, 0.455745112),
    (8, 1): (0.474937176, 0.456384605),
    (16, 1): (0.473764624, 0.457587099),
    (1, 2): (0.388718059, 0.379246105),
    (2, 2): (0.299988866, 0.294076925),
    (4, 2): (0.268869417, 0.257525442),
    (8, 2): (0.256315786, 0.248352515),
    (16, 2): (0.244442413, 0.233526496),
    (1, 4): (0.351759164, 0.359357519),
    (2, 4): (0.229643429, 0.23750286),
    (4, 4): (0.182520716, 0.158954984),
    (8, 4): (0.142308673, 0.147564605),
    (16, 4): (0.13603266, 0.127284584),
    (2, 8): (0.212812873, 0.205718516),
    (4, 8): (0.139009617, 0.133410765),
    (8, 8): (0.10140962, 0.101231566),
    (16, 8): (0.076602744, 0.07953316),
    (4, 16): (0.128203612, 0.126432183),
    (8, 16): (0.079154948, 0.071924346),
    (16, 16): (0.051600181, 0.051791804),
    }



def plot_data(data, title):
    unique_threads = sorted(set(k[1] for k in data.keys()))

    for thread in unique_threads:
        if thread not in [1, 2, 4, 8, 16]:
            continue

        x = [k[0] for k in data.keys() if k[1] == thread]
        y = [sum(data[k]) / 2 for k in data.keys() if k[1] == thread]

        plt.plot(x, y, label=f"{thread} Threads")

    plt.xlabel("Number of Pods")
    plt.ylabel("Average Response Time")
    plt.title(title)
    plt.legend()
    plt.show()


plot_data(local_client_data, "Local Client")
plot_data(nectar_client_data, "Nectar Client")
